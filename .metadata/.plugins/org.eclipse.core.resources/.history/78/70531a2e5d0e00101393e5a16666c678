package Network;

import java.util.HashMap; 
import java.util.Map;

// simulates a layer 2 unmanaged switch
public class Switch extends Device{
	
	private Map<String, String> macTable; // MAC address table
	private final int totalPorts = 24; //number of ports the switch has
	private int nextAvailablePort = 0;

    public Switch(String name, String macAddress) {
        super(name, macAddress);
        this.macTable = new HashMap<>();
    }

    // method to connect a device to the switch
    public void connectDevice(Device device) {
    	if (nextAvailablePort >= totalPorts) 
    	{
    		System.out.println(ErrorMessages.NO_MORE_PORTS.getMessage());
            return;
        }
    	String assignedPort = "Fa0/" + nextAvailablePort;
    	macTable.put(device.getMacAddress(), assignedPort);
    	System.out.println(device.getName() + " connected to " + name + " on Port " + assignedPort);
    	
    	nextAvailablePort++; // go to next available port
    }
    
    public void connectToRouter(Router router) {
        if (connectedRouter != null) {
            System.out.println("Switch is already connected to a router: " + connectedRouter.getName());
            return;
        }
        
        this.connectedRouter = router;  // Store reference to router
        router.connectDevice(this);  // Connect switch to the router
        System.out.println(name + " is now connected to Router: " + router.getName());
    }
    
    public void printMacTable() {
    	System.out.println("\nMAC Address Tabe of " + name + ":");
        if (macTable.isEmpty()) {
        	System.out.println("No Devices Connected.");
            return;
        }

        System.out.println("+-------------------+------------+");
        System.out.println("| MAC Address       | Port       |");
        System.out.println("+-------------------+------------+");

        for (Map.Entry<String, String> entry : macTable.entrySet()) {
            System.out.printf("| %-17s | %-10s |\n", entry.getKey(), entry.getValue());
        }

        System.out.println("+-------------------+------------+\n");
    }

	public Router getConnectedRouter() {
		return connectedRouter;
	}
	
	public Switch getConnectedSwitch()
	{
		return name;
	}
    
}
