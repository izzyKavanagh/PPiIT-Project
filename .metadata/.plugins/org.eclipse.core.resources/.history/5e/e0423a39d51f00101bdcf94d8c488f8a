package Network;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import Devices.Computer;
import Devices.DHCPServer;
import Devices.DNSServer;
import Devices.Layer2Switch;
import Devices.Layer3Switch;
import Devices.Router;
import Devices.Switch;
import Devices.WebServer;
import Menus.DeviceCreationMenu;
import Menus.PCMenu;
import Menus.RouterMenu;
import Menus.ServerMenu;
import Menus.SwitchMenu;
import Menus.TopologyMenu;

public class NetworkSimulationRunner {
	
	public static void main(String[] args) {
		// initialize scanner object for reading in data
		Scanner scanner = new Scanner(System.in);
		
		// New Topology instance to keep track of connections
		Topology topology = new Topology();
		
		// create network manager instance to manage connecting devices
		NetworkManager manager = new NetworkManager(topology);
		
		topology.setNetworkManager(manager);
		
		List<Router> routers = new ArrayList<>();
		List<Switch> switches = new ArrayList<>();
		List<Computer> computers = new ArrayList<>();
		
		topology.updateAdjacencyList();

        // Display network topology
     	topology.printNetworkTopology();
     	topology.printAdjacencyList();
     		
        int choice;
        
        do{
        	System.out.println("\n===== DHCP Server Setup =====");
        	System.out.println("1. Create new device");
            System.out.println("3. Manage PCs");
            System.out.println("4. Manage Switches");
            System.out.println("5. Manage Routers");
            System.out.println("6. Manage DNS server");
            System.out.println("7. Add Connection"); 
            System.out.println("8. Remove Connection");
            System.out.println("9. Exit");
            System.out.print("Enter your choice: ");

            choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                	DeviceCreationMenu.createDevice(scanner, topology, routers, computers, switches, null, null, null);
                    break;
                case 2:
                    dhcpServer.configureIpPool(scanner);
                    break;
                case 3:
                	PCMenu.managePCs(scanner, dhcpServer, computers, manager);
                	break;
                case 4:
                	SwitchMenu.manageSwitches(switches, scanner, topology);
                	break; 
                case 5:
                	RouterMenu.manageRouters(routers, scanner, topology); 
                	break;
                case 6:
                	ServerMenu.manageDnsRecords(scanner, dnsServer);
                	// put methods in ServerMenu class
                	dhcpServer.printPools();
                	 dhcpServer.configureIpPool(scanner);
                	break;
                case 7:
                	TopologyMenu.addConnection(scanner,topology);
                	break; 
                case 8:
                	TopologyMenu.removeConnection(scanner,topology); 
                	break; 
                case 9:
                	break;
            }
            
        }while(choice !=8);
		
		router0.printAllocations();
		
		//switch0.printMacTable();
		
		dhcpServer.printPools();
		
		scanner.close();
		
		//implement further functionality for sending messages,etc.
    }
}
