package Menus;

import java.util.List;
import java.util.Scanner;

import Devices.Computer;
import Devices.DHCPServer;
import Devices.DNSServer;
import Devices.Device;
import Devices.Layer2Switch;
import Devices.Layer3Switch;
import Devices.Router;
import Devices.Switch;
import Devices.WebServer;
import Network.Topology;

public class DeviceCreationMenu {

	public static void createDevice(Scanner scanner, Topology topology, List<Router> routers, List<Computer> computers,
			List<Switch> switches, List<DHCPServer> dhcpServers, List<DNSServer> dnsServers, List<WebServer> webServers)
	{
		System.out.println("\n=== Device Creation Menu ===");
	    System.out.println("1. Router");
	    System.out.println("2. Layer 2 Switch");
	    System.out.println("3. Layer 3 Switch");
	    System.out.println("4. DHCP Server");
	    System.out.println("5. DNS Server");
	    System.out.println("6. Web Server");
	    System.out.println("7. Computer (PC)");
	    System.out.println("8. Exit");
	    System.out.print("Choose a device to create: ");
	    int choice = scanner.nextInt();
	    scanner.nextLine();
		
	    System.out.print("Enter the name of the router: ");
	    String name = scanner.nextLine();
	    
	    if (topology.getRegisteredDevices().containsKey(name)) 
	    {
            System.out.println("Error: A device with that name already exists.");
            return;
        }
	    
	    System.out.print("Enter the MAC address of the router: ");
	    String macAddress = scanner.nextLine();
	    
	    Device newDevice = null;
	        
		switch(choice) 
		{
			case 1: 
				newDevice = new Router(name, macAddress);
				routers.add((Router) newDevice);
			case 2: 
				newDevice = new Layer2Switch(name, macAddress);
				switches.add((Layer2Switch) newDevice);
			case 3: 
				newDevice = new Layer3Switch(name, macAddress);
				switches.add((Layer3Switch) newDevice);
				break;
			case 4:
				newDevice = new DHCPServer(name, macAddress);
				dhcpServers.add((DHCPServer) newDevice);
				break;
			case 5: 
				newDevice = new DNSServer(name, macAddress);
				dnsServers.add((DNSServer) newDevice);
				break;
			case 6: 
				newDevice = new WebServer(name, macAddress,"");
				webServers.add((WebServer) newDevice);
				break;
			case 6: 
				newDevice = new Computer(name, macAddress);
				computers.add((Computer) newDevice);
				break;
		}
	}

	private static Router createRouter(Scanner scanner, Topology topology) {
		System.out.print("Enter the name of the router: ");
	    String name = scanner.nextLine();
	    
	    System.out.print("Enter the MAC address of the router: ");
	    String macAddress = scanner.nextLine();
	    
		Router router = new Router(name, macAddress);
		
		System.out.println(name + " successfully created and added to network!");
		
		topology.registerDevice(router);
		
		return router;
	}
	
	private static Switch createSwitch(Scanner scanner, Topology topology) {
		
		System.out.print("1. Layer 2 Switch");
		System.out.print("2. Layer 3 Switch");
		System.out.print("Enter type of switch to create: ");
		int choice = scanner.nextInt();
		
		System.out.print("Enter the name of the switch: ");
	    String name = scanner.nextLine();
	    
	    System.out.print("Enter the MAC address of the switch: ");
	    String macAddress = scanner.nextLine();
	    
		switch(choice) 
		{
			case 1:
				Layer2Switch layer2Switch = new Layer2Switch(name, macAddress);
				topology.registerDevice(layer2Switch);
				return layer2Switch;
			case 2:
				Layer3Switch layer3Switch = new Layer3Switch(name, macAddress);
				topology.registerDevice(layer3Switch);
				return layer3Switch;
			default:
				break;	
		}
		
		return null;
	}
}
