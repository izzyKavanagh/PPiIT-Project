package Network;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class NetworkSimulationRunner {
	
	public static void main(String[] args) {
		// initialize scanner object for reading in data
		Scanner scanner = new Scanner(System.in);
		// create instances of router and DHCP
		Router router0 = new Router("Router0", "00:1A:1B:1C:1D:1E", "192.168.0.1");
		DHCPServer dhcpServer = new DHCPServer();
		Switch switch0 = new Switch("Switch0", "00:AA:BB:CC:DD:EE");
		List<Computer> computers = new ArrayList<>();
		
		//String poolName = newPool.getPoolName();
        
		//create instances of PCs and add them to computers list for easy processing
		computers.add(new Computer("PC0", "00:2A:2B:2C:2D:2E"));
		computers.add(new Computer("PC1", "00:3A:3B:3C:3D:3E"));
		computers.add(new Computer("PC2", "00:4A:5B:6C:7D:8E"));
		computers.add(new Computer("PC3", "00:5A:6B:7C:8D:9E"));
		
		//connect every PC in computers list to same switch
		for (Computer pc : computers) {
            pc.connectToSwitch(switch0);
        }
		
		//connect switch to router
        switch0.connectToRouter(router0);
        
        int choice;
        
        do{
        	System.out.println("\n===== DHCP Server Setup =====");
            System.out.println("1. View existing IP Pools");
            System.out.println("2. Create a new IP Pool");
            System.out.println("3. Manage PCs");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");

            choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    dhcpServer.printPools();
                    break;
                case 2:
                    dhcpServer.configureIpPool(scanner);
                    break;
                case 3:
                	managePCs(scanner, dhcpServer, computers);
                	break;    	
                case 4:
                	break; 
            }
        }while(choice !=4);
		
		/*
		//get IP addresses for computers 
		pc0.useDHCP(dhcpServer, poolName);
		pc1.useDHCP(dhcpServer, poolName);
		pc2.useDHCP(dhcpServer, poolName);
		pc3.useDHCP(dhcpServer, poolName);
		*/
		 
		switch0.connectToRouter(router0);
		
		//dhcpServer.printAllocations();
		
		router0.printAllocations();
		
		router0.printConnectedDevices();
		
		switch0.printMacTable();
		
		dhcpServer.printPools();
		
		scanner.close();
		
		//implement further functionality for sending messages,etc.
    }

	private static void managePCs(Scanner scanner, DHCPServer dhcpServer, List<Computer> computers) {
		
		 while (true) {
			 System.out.println("\n===== PC Management =====");
	         for (int i = 0; i < computers.size(); i++) 
	         {
	        	 Computer pc = computers.get(i);
	             System.out.println((i + 1) + ". " + pc.getName() + " (IP: " + (pc.getIpAddress() == null ? "Not Assigned" : pc.getIpAddress()) + 
	                                   ", DHCP: " + (pc.useDHCP ? "Enabled" : "Disabled") + ")");
	         }
	         System.out.println((computers.size() + 1) + ". Return to Main Menu");
	         System.out.print("Select a PC to manage: ");

	         int pcChoice = scanner.nextInt();
	         scanner.nextLine(); // Consume newline

	         if (pcChoice == computers.size() + 1) return; // Return to main menu

	         if (pcChoice < 1 || pcChoice > computers.size()) 
	         {
	        	 System.out.println("Invalid selection! Try again.");
	             continue;
	         }

	         Computer selectedPC = computers.get(pcChoice - 1);
	         configurePC(scanner, dhcpServer, selectedPC);
	     }
	}

	private static void configurePC(Scanner scanner, DHCPServer dhcpServer, Computer pc) {
		
		System.out.println("\nManaging " + pc.getName());
        System.out.println("Current IP: " + (pc.getIpAddress() == null ? "Not Assigned" : pc.getIpAddress()));
        System.out.println("DHCP Enabled: " + (pc.useDHCP ? "Yes" : "No"));

        System.out.println("1. Enable DHCP");
        System.out.println("2. Disable DHCP (Use Static IP)");
        System.out.println("3. Return to PC Menu");
        System.out.print("Enter your choice: ");

        int choice = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        switch (choice) {
            case 1:
                System.out.println("Available IP Pools:");
                dhcpServer.printPools();
                System.out.print("Enter the IP Pool name to use: ");
                String poolName = scanner.nextLine();

                if (!dhcpServer.poolExists(poolName)) {
                    System.out.println("ERROR: Pool does not exist.");
                    return;
                }

                pc.useDHCP = true;
                pc.useDHCP(dhcpServer, poolName);
                System.out.println(pc.getName() + " is now using DHCP with IP: " + pc.getIpAddress());
                break;

            case 2:
            	pc.useDHCP = false;
                System.out.println(pc.getName() + " is now using Static IP.");
                break;

            case 3:
                return;

            default:
                System.out.println("Invalid choice! Try again.");
        }
		
	}
}
