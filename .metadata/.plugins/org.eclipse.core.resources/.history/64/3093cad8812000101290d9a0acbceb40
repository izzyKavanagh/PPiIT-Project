package Menus;

import java.util.ArrayList;
import java.util.List;

public class GuidedModeUtils {

	public static void printStepBox(String title, String... lines) {
        int indent = 8;
        String padding = " ".repeat(indent);
        int maxLineLength = 70; // Max line length before wrapping

        // Wrap each input line and collect all wrapped lines
        List<String> wrappedLines = new ArrayList<>();
        for (String line : lines) {
            wrappedLines.addAll(wrapLine(line, maxLineLength));
        }

        // Determine box width
        int width = Math.max(title.length(), getMaxLineLength(wrappedLines)) + 6;

        // Build box
        String horizontalBorder = padding + "╔" + "═".repeat(width - 2) + "╗";
        String bottomBorder = padding + "╚" + "═".repeat(width - 2) + "╝";

        System.out.println(); // Top spacing
        System.out.println(horizontalBorder);
        System.out.printf(padding + "║ %-"+(width-4)+"s ║\n", title);
        System.out.println(padding + "╟" + "─".repeat(width - 2) + "╢");

        for (String line : wrappedLines) {
            System.out.printf(padding + "║ %-"+(width-4)+"s ║\n", line);
        }

        System.out.println(bottomBorder);
        System.out.println(); // Bottom spacing
    }

    private static List<String> wrapLine(String line, int maxLineLength) {
        List<String> wrapped = new ArrayList<>();
        while (line.length() > maxLineLength) {
            int wrapAt = line.lastIndexOf(' ', maxLineLength);
            if (wrapAt == -1) wrapAt = maxLineLength;
            wrapped.add(line.substring(0, wrapAt).trim());
            line = line.substring(wrapAt).trim();
        }
        wrapped.add(line);
        return wrapped;
    }

    private static int getMaxLineLength(List<String> lines) {
        int max = 0;
        for (String line : lines) {
            max = Math.max(max, line.length());
        }
        return max;
    }
}
