package Devices;

import java.util.Map;

import Network.Topology;

// Class for representing computer
public class Computer extends Device{
	
	private final int totalPorts = 1;
	
	public Computer(String name, String macAddress) {
		super(name,macAddress);
	}
	
	@Override
	public int getTotalPorts()
	{
		return totalPorts;
	}
	
	public void sendMessage(String destinationIP, String message, Topology topology) {
		String destinationMac = lookupMac(destinationIP);
		
		System.out.println("Destination IP: " + destinationIP);
	    if (destinationMac == null) 
	    {
	        System.out.println(name + " doesnâ€™t know MAC for " + destinationIP + ". Sending ARP request...");
	        arpRequest(destinationIP, topology);
	        destinationMac = lookupMac(destinationIP);
	        
	        if (destinationMac == null) 
	        {
	            System.out.println("Could not resolve MAC. Message dropped.");
	            return;
	        }
	    }

	    System.out.println(name + " sending message to " + destinationIP + " (" + destinationMac + "): " + message);
	}

	private void arpRequest(String destinationIP, Topology topology) {
		Map<String, Map<String, Device>> connections = topology.getTopology();
	    Map<String, Device> myPorts = connections.get(this.name);

	    if (myPorts == null) return;

	    for (Device connectedDevice : myPorts.values()) {
	        if (connectedDevice.getIpAddress() != null && connectedDevice.getIpAddress().equals(destinationIP)) {
	            addArpEntry(destinationIP, connectedDevice.getMacAddress());
	            System.out.println("Received ARP reply: " + connectedDevice.getMacAddress());
	            return;
	        }
	    }
	}
}

