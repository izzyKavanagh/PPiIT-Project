package Network;

public abstract class Device {

	protected String name;
    protected String macAddress;
    protected String ipAddress;
    protected Router connectedRouter;
	protected Switch connectedSwitch;
	protected boolean useDHCP; // default is static IP

    public Device(String name, String macAddress, boolean useDHCP) {
        this.name = name;
        this.macAddress = macAddress;
        this.ipAddress = null; // Assigned by DHCP
        this.useDHCP = useDHCP;
    }

    public String getName() {
        return name;
    }

    public String getMacAddress() {
        return macAddress;
    }

    public String getIpAddress() {
        return ipAddress;
    }

    public void connectToRouter(Router router) {
    	this.connectedRouter = router;
    	//check if the instance of device is a switch
    	if(!(this instanceof Switch) && !useDHCP) // layer 2 switches don't have IP addresses
    	{
            router.connectDevice(this);
            this.ipAddress = router.assignStaticIP(macAddress);
            System.out.println(name + " assigned IP: " + ipAddress);
    	}
    	else
    	{
            router.connectDevice(this);
    	}
    }
    
    public void connectToSwitch(Switch networkSwitch) {
    	this.connectedSwitch = networkSwitch;
	    Router router = networkSwitch.getConnectedRouter();
	    
	    networkSwitch.connectDevice(this);
	    System.out.println(name + " connected to switch: " + networkSwitch.getName());
	    
	    // if switch is connected to device and is not using DHCP
	    if (router != null && !useDHCP) 
	    {
	        router.assignStaticIP(this.macAddress);  // give device connecting to switch a static IP 
	    }
    }

    public void useDHCP(DHCPServer dhcpServer, String poolName) {
        this.ipAddress = dhcpServer.assignIp(poolName,macAddress);
        System.out.println(name + " assigned IP: " + ipAddress);
    }
    
    public void sendMessage(String message, String destinationIp) {
		// Method for sending messages to other devices (through router)
	}
	
	public void receiveMessage(Packet packet) {
		// method for receiving messages from other devices
	}
}
