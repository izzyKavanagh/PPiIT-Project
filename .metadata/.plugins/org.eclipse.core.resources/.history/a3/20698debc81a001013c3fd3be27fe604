package Network;

public abstract class Device {

	protected String name;
    protected String macAddress;
    protected String ipAddress;
    protected Router connectedRouter;
	protected Switch connectedSwitch;
	protected boolean staticIP; // default is static IP
	protected int totalPorts;

    public Device(String name, String macAddress) {
        this.name = name;
        this.macAddress = macAddress;
        this.ipAddress = null; // Assigned by DHCP
        this.staticIP = true;
    }

    public String getName() {
        return name;
    }

    public String getMacAddress() {
        return macAddress;
    }

    public String getIpAddress() {
        return ipAddress;
    }

    public void useDHCP(DHCPServer dhcpServer, String poolName) {
        this.ipAddress = dhcpServer.assignIp(poolName,macAddress);
        System.out.println(name + " assigned IP: " + ipAddress);
    }
    
    public void useStatic(Device device)
    {
    	topology.updateAdjacencyList();
    	
    	Device connectedRouter = topology.findConnectedDeviceOfType(device, Router.class);

    	if (connectedRouter != null && !(device instanceof Layer2Switch)) {
    	    Router router = (Router) connectedRouter;
    	    String ip = router.assignStaticIP(device.getMacAddress());
    	    device.ipAddress = ip;
    	    System.out.println(device.getName() + " assigned IP: " + ip);
    	}
    }
    
    public int getTotalPorts() {
	    return totalPorts;
	}
    
    public void sendMessage(String message, String destinationIp) {
		// Method for sending messages to other devices (through router)
	}
	
	public void receiveMessage(Packet packet) {
		// method for receiving messages from other devices
	}
}
